name: CI
on:
  push:
    branches: [main]
    tags: '*'
  pull_request:

jobs:
  initial_check:
    name: Initial checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.9'
          arch: x64
      - name: Format with JuliaFormatter
        run: julia --project=utils/format utils/format/format.jl
      - name: Check formatting
        run: |
          if [[ $(git diff --name-only | wc -l) -ge 1 ]]; then exit 1; else exit 0; fi
      - uses: julia-actions/julia-buildpkg@v1
      - uses: adamslc/julia-runtest@main
        with:
          test_arg: basics
        name: Run basic tests

  test:
    needs: initial_check
    name: Run Tests (Julia v${{ matrix.version }}) (${{ matrix.test_subset }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: ['1.9']
        os:      [ubuntu-latest]
        arch:    [x64]
        test_subset: ['unit', 'integration']
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1

      - uses: adamslc/julia-runtest@main
        with:
          test_arg: ${{ matrix.test_subset }}
        name: Run ${{ matrix.test_subset }} tests
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: 'src,ext'
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
          flags: ${{ matrix.test_subset }}

  docs:
    needs: initial_check
    name: Build documentation
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.9'
      - name: Install dependencies
        run: julia --project=docs -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=docs docs/make.jl
